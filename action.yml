---
name: 'Configure CF CLI'

description: |
  Installs the latest linux64 binary for the CloudFoundry CLI as outlined here:
  https://github.com/cloudfoundry/cli/blob/master/doc/installation-instructions/installation-instructions-v7.md#installers-and-compressed-binaries'

inputs:
  cf-username:
    description: 'CloudFoundry username to authenticate with'
    required: true
    default: ''

  cf-password:
    description: 'CloudFoundry password to authenticate with'
    required: true
    default: ''

  cf-org:
    description: 'CloudFoundry Organization to target'
    required: true
    default: ''

outputs:
  target-environment:
    description: "The target environment based off the github ref. One of 'dev', 'test', or 'prod'."
    value: ${{ steps.environment.outputs.environment_name }}

runs:
  using: "composite"
  steps:
    - name: Add masks for inputs
      shell: bash
      id: input-validation
      run: |
        # Mask the sensitive cf values
        cf_username=${{ inputs.cf-username }}
        cf_password=${{ inputs.cf-password }}
        cf_org=${{ inputs.cf-org }}

        install_only_mode=false

        if [ -z "$cf_username" ] || [ -z "$cf_password" ] || [ -z "$cf_org" ]
        then
          install_only_mode=true
          echo "Reverting to install-only mode."
        fi

        echo "::add-mask::$cf_username"
        echo "::add-mask::$cf_password"
        echo "::add-mask::$cf-org"

        # Export whether the action is in "install-only" mode
        echo "::set-output name=install-only-mode::$install_only_mode"

    - name: Install the CloudFoundry CLI
      shell: bash
      run: |
        # create a 'bin' directory for the binary
        mkdir -p cfcli/bin
        cd cfcli/bin

        # Download and extract the CLI
        curl --silent --show-error -L "https://packages.cloudfoundry.org/stable?release=linux64-binary&version=v7&source=github" | tar -zx

        # Put the binary on the GITHUB_PATH
        echo "$(pwd)" >> $GITHUB_PATH
        echo "Successfully installed the CF CLI at $(pwd)"

    - name: Authenticate to the CF API
      shell: bash
      run: |
        # Authenticate to the cloud.gov cli if user/pass was provided
        # The 'PATH' currently doesn't have 'cf' on it, so use ./
        if [ ${{ steps.input-validation.outputs.install-only-mode }} = false ]
        then
          ./cf api https://api.fr.cloud.gov
          ./cf auth ${{ inputs.cf-username }} ${{ inputs.cf-password }}
          echo "Successfully authenticated with the CF CLI."
        else
          echo "Install-only mode was set to: ${{ steps.input-validation.outputs.install-only-mode }}"
        fi

    - name: Target an environment
      id: environment
      shell: bash
      run: |
        # Determine the deployment target based on the github ref and set the
        # 'cf target' to the correct value.
        if [ ${{ steps.input-validation.outputs.install-only-mode }} = false ]
        then
          echo "Github Ref is: ${{ github.ref }}"
          echo "GitHub event name is: $GITHUB_EVENT_NAME"

          if [[ $GITHUB_REF == "refs/heads/main" ]]
          then
              # Pushes to main are deployed to dev
              target_environment=give-dev
              environment_name=dev
          elif [[ $GITHUB_REF =~ refs/tags/* ]]
          then
              # Tags on main are deployed to test
              target_environment=give-test
              environment_name=test
          else
              echo 'Unknown deployment target'
              exit 1
          fi
          # Set the outputs for this step
          echo "::set-output name=ENVIRONMENT_NAME::$environment_name"
          echo "Setting the CF CLI to target $target_environment"
          ./cf target -o ${{ inputs.cf-org }} -s "$target_environment"
        fi
