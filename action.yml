---
name: 'Configure CF CLI'
description: |
  Installs the latest linux64 binary for the CloudFoundry CLI as outlined here:
  https://github.com/cloudfoundry/cli/blob/master/doc/installation-instructions/installation-instructions-v7.md#installers-and-compressed-binaries'
inputs:
  cf-username:
    description: 'CloudFoundry username to authenticate with'
    required: true
    default: ''
  cf-password:
    description: 'CloudFoundry password to authenticate with'
    required: true
    default: ''
runs:
  using: "composite"
  steps:
    - shell: bash
      run: |
        # Mask the sensitive cf cli credentials
        cf_username=${{ inputs.cf-username }}
        cf_password=${{ inputs.cf-password }}

        try_cf_authenticate=true # only try to auth if both user+pass were given

        if [ ! -z "$cf_username" ]; then
          echo "::add-mask::$cf_username"
        else
          try_cf_authenticate=false
          echo "cf-username not given. Will not attempt to authenticate with cf cli."
        fi

        if [ ! -z "$cf_password" ]; then
          echo "::add-mask::$cf_password"
        else
          try_cf_authenticate=false
          echo "cf-password not given. Will not attempt to authenticate with cf cli."
        fi

        # create a 'bin' directory for the binary
        mkdir -p cfcli/bin
        cd cfcli/bin

        # Download and extract the CLI
        curl --silent --show-error -L "https://packages.cloudfoundry.org/stable?release=linux64-binary&version=v7&source=github" | tar -zx

        # Put the binary on the GITHUB_PATH
        echo "$(pwd)" >> $GITHUB_PATH
        echo "Successfully installed the CF CLI at $(pwd)"

        # Authenticate to the cloud.gov cli if user/pass was provided
        if [ "$try_cf_authenticate" = true ]; then
          # The 'PATH' currently doesn't have 'cf' on it, so use ./
          ./cf api https://api.fr.cloud.gov
          ./cf auth ${{ inputs.cf-username }} ${{ inputs.cf-password }}
          echo "Successfully authenticated with the CF CLI."
        fi
